{"version":3,"file":"static/chunks/pages/tiles-c26ce69052435814.js","mappings":"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","sources":["webpack://_N_E/?0a53","webpack://_N_E/./modules/tiles/navigation-manager.ts","webpack://_N_E/./modules/tiles/renderer-base.ts","webpack://_N_E/./modules/tiles/types.ts","webpack://_N_E/./modules/tiles/renderer-tiling.ts","webpack://_N_E/./modules/tiles/renderer-classic.ts","webpack://_N_E/./modules/tiles/widget.ts","webpack://_N_E/./modules/tiles/widget-manager.ts","webpack://_N_E/./pages/tiles/index.tsx","webpack://_N_E/./pages/tiles/tiles_page_style.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tiles\",\n      function () {\n        return require(\"private-next-pages/tiles/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tiles\"])\n      });\n    }\n  ","import { CANVAS_HEIGHT, CANVAS_WIDTH, RendererBase } from \"./renderer-base\";\nimport { IPoint } from \"./types\";\n\nexport class NavigationManager {\n  private _lastCursorPosition: IPoint = { x: 0, y: 0 };\n  private _navigationStartCursorPosition: IPoint | undefined = undefined;\n\n  private _isInvalid: boolean = true;\n  private _isZooming: boolean = false;\n  public position: IPoint;\n  public scale: number;\n\n  private _deltaPan: IPoint = { x: 0, y: 0 };\n  private _endZoomTimeout: NodeJS.Timeout;\n\n  private _time = 0;\n  private _frames = 0;\n\n  constructor(readonly renderer: RendererBase) {\n    const canvas = this.renderer.container;\n    this.position = { x: canvas.width * 0.5, y: canvas.height * 0.5 };\n    this.scale = 1;\n\n    canvas.addEventListener(\"pointerdown\", this._startNavigation, false);\n    canvas.addEventListener(\"wheel\", this.onMouseWheel, false);\n  }\n\n  refresh() {\n    const needsRender = this._isInvalid || this._isZooming;\n    if (this._isInvalid) {\n      // update position of the camera\n      this.position.x = this.position.x + this._deltaPan.x;\n      this.position.y = this.position.y + this._deltaPan.y;\n      this._deltaPan.x = 0;\n      this._deltaPan.y = 0;\n      this._isInvalid = false;\n    }\n    return needsRender;\n  }\n\n  zoomBy(delta: number, cursor?: IPoint): this {\n    const newScale = Math.min(Math.max(this.scale * (1 + delta * 0.01), 0.04), 4);\n    if (newScale !== this.scale) {\n      this.scale = Math.min(Math.max(this.scale * (1 + delta * 0.01), 0.04), 4);\n      clearTimeout(this._endZoomTimeout);\n      this._endZoomTimeout = setTimeout(() => {\n        this.renderer.reset();\n        this.renderer.render({ canvasOffset: this.position, scale: this.scale });\n        this._isZooming = false;\n      }, 100);\n      this._isZooming = true;\n    }\n    return this;\n  }\n\n  panBy(deltaX: number, deltaY: number): this {\n    this._deltaPan.x = deltaX / this.scale;\n    this._deltaPan.y = deltaY / this.scale;\n    // require refresh\n    this._isInvalid = true;\n    return this;\n  }\n\n  zoomOutAutomation() {\n    this.position = { x: 0, y: 0 };\n    this.scale = 4;\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.scale > 0.04) {\n        this.zoomBy(-1);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  zoomInAutomation() {\n    this.position = { x: 0, y: 0 };\n    this.scale = 0.04;\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.scale < 4) {\n        this.zoomBy(1);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  panAutomation() {\n    this.scale = 0.04;\n    this.position = { x: -37.5 * CANVAS_WIDTH, y: -37.5 * CANVAS_HEIGHT };\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.position.x < 37.5 * CANVAS_WIDTH) {\n        this.panBy(0.01 * CANVAS_WIDTH, 0.01 * CANVAS_HEIGHT);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  destroy() {\n    const canvas = this.renderer.container;\n    canvas.removeEventListener(\"pointermove\", this._navigate, false);\n    canvas.removeEventListener(\"pointerup\", this._endNavigation, false);\n    canvas.removeEventListener(\"pointerdown\", this._startNavigation, false);\n    canvas.removeEventListener(\"wheel\", this.onMouseWheel, false);\n  }\n\n  private onMouseWheel = (event: WheelEvent) => {\n    event.preventDefault();\n    const position = this.renderer.getMousePosition();\n    this._navigationStartCursorPosition = { ...position };\n    // const deltaYFactor = isMac ? -1 : -3;\n    const deltaYFactor = -1;\n    const delta =\n      event.deltaMode === 1 ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n    this.zoomBy(delta, this._navigationStartCursorPosition);\n  };\n\n  private _startNavigation = (event: PointerEvent) => {\n    const canvas = this.renderer.container;\n    const position = this.renderer.getMousePosition();\n    this._lastCursorPosition.x = position.x;\n    this._lastCursorPosition.y = position.y;\n    // this._navigationStartCursorPosition.x = position.x;\n    // this._navigationStartCursorPosition.y = position.y;\n\n    canvas.addEventListener(\"pointermove\", this._navigate, false);\n    canvas.addEventListener(\"pointerup\", this._endNavigation, false);\n\n    canvas.removeEventListener(\"pointerdown\", this._startNavigation, false);\n  };\n\n  private _endNavigation = (event: PointerEvent) => {\n    const canvas = this.renderer.container;\n    canvas.removeEventListener(\"pointermove\", this._navigate, false);\n    canvas.removeEventListener(\"pointerup\", this._endNavigation, false);\n    canvas.addEventListener(\"pointerdown\", this._startNavigation, false);\n  };\n\n  private _navigate = (event: PointerEvent) => {\n    const lastCursorPosition = this._lastCursorPosition;\n    const lastDragPosition = this.renderer.getMousePosition();\n    const deltaX = lastCursorPosition.x - lastDragPosition.x;\n    const deltaY = lastCursorPosition.y - lastDragPosition.y;\n    this._lastCursorPosition.x = lastDragPosition.x;\n    this._lastCursorPosition.y = lastDragPosition.y;\n    this.panBy(deltaX, deltaY);\n  };\n}\n","import { NavigationManager } from \"./navigation-manager\";\nimport { BoundaryBox, IPoint, ViewportUpdateCallback, VisualUpdateParams } from \"./types\";\nimport { Widget } from \"./widget\";\nimport { WidgetManager } from \"./widget-manager\";\n\nexport const CANVAS_WIDTH = 1280;\nexport const CANVAS_HEIGHT = 800;\n\nexport interface RendererProps {\n  canvas: HTMLCanvasElement;\n  widgetManager: WidgetManager;\n}\n\nexport abstract class RendererBase {\n  public renderedWidgets = 0;\n  public renderedTiles = 0;\n\n  /**\n   * container location on HTML page (top-left)\n   */\n  private _location: IPoint = { x: 0, y: 0 };\n  /**\n   * last cached cursor position\n   */\n  private _lastMousePosition?: IPoint;\n\n  protected _container: HTMLCanvasElement;\n  protected _context: CanvasRenderingContext2D;\n  protected _requestID: number;\n\n  protected widgetManager: WidgetManager;\n  navigationManager: NavigationManager;\n\n  constructor({ canvas, widgetManager }: RendererProps) {\n    const ctx = canvas.getContext(\"2d\");\n\n    if (ctx === null) {\n      throw new Error(\"Canvas2D renderer is uninitialized!\");\n    }\n\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n\n    this._container = canvas;\n    this._context = ctx;\n\n    this.widgetManager = widgetManager;\n    this.navigationManager = new NavigationManager(this);\n\n    this._container.addEventListener(\"pointerover\", this.dispatchMouseOrWheelOverEvent);\n    this._container.addEventListener(\"pointermove\", this.dispatchMouseOrWheelOverEvent);\n    this._container.addEventListener(\"wheel\", this.dispatchMouseOrWheelOverEvent, {\n      capture: true,\n    });\n    window.addEventListener(\"scroll\", this.captureLocation.bind(this));\n\n    // initialize location of the canvas\n    this.captureLocation();\n\n    // Start rendering loop\n    setTimeout(this.refresh.bind(this), 1000);\n  }\n\n  get container(): HTMLCanvasElement {\n    return this._container;\n  }\n\n  get context(): CanvasRenderingContext2D {\n    return this._context;\n  }\n\n  background(color: string) {\n    const ctx = this._context;\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  render(params: VisualUpdateParams): void {\n    this._render(params);\n    document.getElementById(\"widgetInfo\").innerText = `\n      Total widgets: ${this.widgetManager.numWidgets}\n      rendered widgets: ${this.renderedWidgets}\n      rendered tiles: ${this.renderedTiles}\n    `;\n  }\n\n  abstract _render(params: VisualUpdateParams): void;\n\n  abstract reset(): void;\n\n  refresh() {\n    const needsRender = this.navigationManager.refresh();\n    if (needsRender) {\n      this.render({\n        canvasOffset: this.navigationManager.position,\n        scale: this.navigationManager.scale,\n      });\n    }\n    this._requestID = requestAnimationFrame(this.refresh.bind(this));\n  }\n\n  onViewportUpdate(callback: ViewportUpdateCallback) {}\n\n  destroy() {\n    cancelAnimationFrame(this._requestID);\n    this.navigationManager.destroy();\n    this.navigationManager = null;\n  }\n\n  clientToEngineSpace(x: number, y: number): IPoint {\n    return { x: x - this._location.x, y: y - this._location.y };\n  }\n\n  setMousePosition(x: number, y: number): IPoint {\n    const position = this.clientToEngineSpace(x, y);\n    this._lastMousePosition = position;\n    return this._lastMousePosition;\n  }\n\n  getMousePosition(): IPoint | undefined {\n    return this._lastMousePosition;\n  }\n\n  protected drawContext(\n    context: CanvasRenderingContext2D,\n    box: BoundaryBox,\n    scale: number,\n    fromWidgets?: Widget[]\n  ): void {\n    const widgets = this.widgetManager.getWidgets(box, fromWidgets);\n    context.clearRect(0, 0, this._container.width, this._container.width);\n    widgets.forEach((widget) => {\n      context.drawImage(\n        widget.image,\n        (widget.position.x - box.x) * scale,\n        (widget.position.y - box.y) * scale,\n        // Images are stored at 4x resolution\n        (widget.image.width * scale) / 4,\n        (widget.image.height * scale) / 4\n      );\n    });\n    this.renderedWidgets += widgets.length;\n    this.renderedTiles += 1;\n  }\n\n  protected getVisualUpdateParamsBox(params: VisualUpdateParams) {\n    const width = this._container.width / params.scale;\n    const height = this._container.height / params.scale;\n    const x = params.canvasOffset.x - width / 2;\n    const y = params.canvasOffset.y - height / 2;\n    return { x, y, width, height };\n  }\n\n  private captureLocation(): void {\n    const canvas = this._container;\n    const { left, top } = canvas.getBoundingClientRect();\n    this._location.x = left;\n    this._location.y = top;\n  }\n\n  private dispatchMouseOrWheelOverEvent = (event: MouseEvent | WheelEvent | PointerEvent) => {\n    this.setMousePosition(event.clientX, event.clientY);\n  };\n}\n","export interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface ISize {\n  width: number;\n  height: number;\n}\n\nexport interface BoundaryBox extends IPoint, ISize {}\n\nexport interface VisualUpdateParams {\n  /**\n   * Middle of the canvas\n   */\n  canvasOffset: IPoint;\n  /**\n   * Width and Height of the canvas\n   */\n  /**\n   * Zoom level of the canvas\n   */\n  scale: number;\n}\n\nexport type ViewportUpdateCallback = (params: VisualUpdateParams) => void;\n\nexport function isWithin(p: IPoint, b: BoundaryBox) {\n  const px = p.x;\n  const py = p.y;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return px > bx0 && px < bx1 && py > by0 && py < by1;\n}\n\nexport function intersects(a: BoundaryBox, b: BoundaryBox) {\n  const ax0 = a.x;\n  const ay0 = a.y;\n  const ax1 = a.x + a.width;\n  const ay1 = a.y + a.height;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return bx1 > ax0 && bx0 < ax1 && by1 > ay0 && by0 < ay1;\n}\n\nexport function contains(a: BoundaryBox, b: BoundaryBox) {\n  const ax0 = a.x;\n  const ay0 = a.y;\n  const ax1 = a.x + a.width;\n  const ay1 = a.y + a.height;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return bx0 > ax0 && bx1 < ax1 && by0 > ay0 && by1 < ay1;\n}\n","import { RendererBase, RendererProps } from \"./renderer-base\";\nimport { BoundaryBox, contains, intersects, VisualUpdateParams } from \"./types\";\nimport { Widget } from \"./widget\";\n\nconst TILE_INDICES = [0, 1, 2, 3];\n\nclass Tile {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  needsRender = false;\n\n  constructor(width: number, height: number) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n}\n\nexport class RendererTiling extends RendererBase implements BoundaryBox {\n  x = 0;\n  y = 0;\n  width = 0;\n  height = 0;\n  scale = 0;\n\n  private tileWidth = 0;\n  private tileHeight = 0;\n  private tiles: Tile[];\n\n  constructor(props: RendererProps) {\n    super(props);\n    this.tiles = TILE_INDICES.map(() => {\n      return new Tile(this.container.width, this.container.height);\n    });\n  }\n\n  _render(params: VisualUpdateParams) {\n    const viewport = this.getVisualUpdateParamsBox(params);\n\n    // Scale unchanged - panning\n    if (params.scale === this.scale) {\n      // Viewport completely outside of tiles - redraw everything\n      if (!intersects(this, viewport)) {\n        this.resetTiles(viewport, params.scale);\n      } else {\n        // Handle shift on X axis\n        if (viewport.x < this.x) {\n          this.moveTilesLeft();\n        } else if (viewport.x > this.x + this.tileWidth) {\n          this.moveTilesRight();\n        }\n        // Handle shift on Y axis\n        if (viewport.y < this.y) {\n          this.moveTilesUp();\n        } else if (viewport.y > this.y + this.tileHeight) {\n          this.moveTilesDown();\n        }\n      }\n      // Scale changed - zooming. Handle redraw if tiles are too small\n    } else if (!contains(this, viewport) || viewport.width < this.tileWidth / 2) {\n      this.resetTiles(viewport, params.scale);\n    }\n\n    let widgets;\n\n    if (this.tiles.map((tile) => tile.needsRender).some((needsRender) => needsRender)) {\n      this.renderedWidgets = 0;\n      widgets = this.widgetManager.getWidgets(this);\n    }\n\n    this.renderTiles(widgets);\n    this.renderViewport(viewport, params.scale);\n  }\n\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.scale = 0;\n    this.tileWidth = 0;\n    this.tileHeight = 0;\n  }\n\n  private renderTile(index: number, widgets?: Widget[]): void {\n    const tile = this.tiles[index];\n\n    if (!tile.needsRender) {\n      return;\n    }\n\n    const tileBox = {\n      x: index % 2 === 0 ? this.x : this.x + this.tileWidth,\n      y: index < 2 ? this.y : this.y + this.tileHeight,\n      width: this.tileWidth,\n      height: this.tileHeight,\n    };\n\n    this.drawContext(tile.ctx, tileBox, this.scale, widgets);\n    tile.needsRender = false;\n  }\n\n  private renderTiles(widgets?: Widget[]): void {\n    TILE_INDICES.forEach((index) => this.renderTile(index, widgets));\n  }\n\n  private renderViewport(viewport: BoundaryBox, scale: number) {\n    const viewportScaledWidth = viewport.width * this.scale;\n    const viewportScaledHeight = viewport.height * this.scale;\n\n    const x0 = (viewport.x - this.x) * this.scale;\n    const x1 = Math.min(viewportScaledWidth, this.container.width - x0);\n    const x2 = viewportScaledWidth - x1;\n    const y0 = (viewport.y - this.y) * this.scale;\n    const y1 = Math.min(viewportScaledHeight, this.container.height - y0);\n    const y2 = viewportScaledHeight - y1;\n\n    const scaleRatio = scale / this.scale;\n\n    const w0 = x1 * scaleRatio;\n    const w1 = x2 * scaleRatio;\n    const h0 = y1 * scaleRatio;\n    const h1 = y2 * scaleRatio;\n\n    this.context.clearRect(0, 0, this.container.width, this.container.height);\n\n    this.context.drawImage(this.tiles[0].canvas, x0, y0, x1, y1, 0, 0, w0, h0);\n    this.context.drawImage(this.tiles[1].canvas, 0, y0, x2, y1, w0, 0, w1, h0);\n    this.context.drawImage(this.tiles[2].canvas, x0, 0, x1, y2, 0, h0, w0, h1);\n    this.context.drawImage(this.tiles[3].canvas, 0, 0, x2, y2, w0, h0, w1, h1);\n\n    this.context.strokeStyle = \"#FF0000\";\n\n    this.context.strokeRect(0, 0, w0, h0);\n    this.context.strokeRect(w0, 0, w1, h0);\n    this.context.strokeRect(0, h0, w0, h1);\n    this.context.strokeRect(w0, h0, w1, h1);\n  }\n\n  private invalidateTiles(...indices: number[]): void {\n    indices.forEach((index) => (this.tiles[index].needsRender = true));\n  }\n\n  private swapTilesX(): void {\n    this.tiles = [this.tiles[1], this.tiles[0], this.tiles[3], this.tiles[2]];\n  }\n\n  private swapTilesY(): void {\n    this.tiles = [this.tiles[2], this.tiles[3], this.tiles[0], this.tiles[1]];\n  }\n\n  private moveTilesLeft(): void {\n    this.swapTilesX();\n    this.invalidateTiles(0, 2);\n    this.x -= this.tileWidth;\n  }\n\n  private moveTilesRight(): void {\n    this.swapTilesX();\n    this.invalidateTiles(1, 3);\n    this.x += this.tileWidth;\n  }\n\n  private moveTilesUp(): void {\n    this.swapTilesY();\n    this.invalidateTiles(0, 1);\n    this.y -= this.tileHeight;\n  }\n\n  private moveTilesDown(): void {\n    this.swapTilesY();\n    this.invalidateTiles(2, 3);\n    this.y += this.tileHeight;\n  }\n\n  private resetTiles(viewport: BoundaryBox, scale: number): void {\n    this.invalidateTiles(0, 1, 2, 3);\n    this.x = viewport.x - viewport.width / 2;\n    this.y = viewport.y - viewport.height / 2;\n    this.width = viewport.width * 2;\n    this.height = viewport.height * 2;\n    this.scale = scale;\n    this.tileWidth = viewport.width;\n    this.tileHeight = viewport.height;\n  }\n}\n","import { RendererBase } from \"./renderer-base\";\nimport { VisualUpdateParams } from \"./types\";\n\nexport class RendererClassic extends RendererBase {\n  _render(params: VisualUpdateParams): void {\n    const box = this.getVisualUpdateParamsBox(params);\n    this.renderedWidgets = 0;\n    this.drawContext(this.context, box, params.scale);\n  }\n\n  reset() {}\n}\n","import { BoundaryBox, IPoint } from \"./types\";\n\nexport class Widget {\n  constructor(public image: HTMLImageElement, public position: IPoint) {}\n\n  getBoundary(): BoundaryBox {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      // Images are stored at 4x resolution\n      width: this.image.width / 4,\n      height: this.image.height / 4,\n    };\n  }\n}\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./renderer-base\";\nimport { BoundaryBox, intersects, isWithin } from \"./types\";\nimport { Widget } from \"./widget\";\n\nconst AVG_DISTANCE = 200;\n\nexport class WidgetManager {\n  private worldBox: BoundaryBox = { x: 0, y: 0, width: 0, height: 0 };\n  private assets: HTMLImageElement[] = [];\n  private widgets: Widget[] = [];\n\n  get numWidgets() {\n    return this.widgets.length;\n  }\n\n  constructor() {\n    for (let i = 1; i < 67; i++) {\n      const asset = document.createElement(\"img\");\n      asset.src = `/tiles/${i.toString().padStart(2, \"0\")}.png`;\n      this.assets.push(asset);\n    }\n\n    this.createWidgets({\n      x: -50 * CANVAS_WIDTH,\n      y: -50 * CANVAS_HEIGHT,\n      width: 100 * CANVAS_WIDTH,\n      height: 100 * CANVAS_HEIGHT,\n    });\n  }\n\n  getWidgets(box: BoundaryBox, widgets = this.widgets) {\n    const result: Widget[] = [];\n\n    widgets.forEach((widget) => {\n      const widgetBox = widget.getBoundary();\n      if (intersects(box, widgetBox)) {\n        result.push(widget);\n      }\n    });\n\n    return result;\n  }\n\n  private createWidgets(box: BoundaryBox) {\n    const x0 = Math.min(this.worldBox.x, box.x);\n    const y0 = Math.min(this.worldBox.y, box.y);\n    const x1 = Math.max(this.worldBox.x + this.worldBox.width, box.x + box.width);\n    const y1 = Math.max(this.worldBox.y + this.worldBox.height, box.y + box.height);\n\n    const newWorldBox: BoundaryBox = {\n      x: x0,\n      y: y0,\n      width: x1 - x0,\n      height: y1 - y0,\n    };\n\n    let x = newWorldBox.x;\n    while (x < newWorldBox.x + newWorldBox.width) {\n      let y = newWorldBox.y;\n      while (y < newWorldBox.y + newWorldBox.height) {\n        if (!isWithin({ x, y }, this.worldBox)) {\n          const assetIndex = Math.floor(Math.random() * this.assets.length);\n          const asset = this.assets[assetIndex];\n          this.widgets.push(new Widget(asset, { x, y }));\n        }\n        y += Math.floor((Math.random() + 0.5) * AVG_DISTANCE);\n      }\n      x += Math.floor((Math.random() + 0.5) * AVG_DISTANCE);\n    }\n    this.worldBox = newWorldBox;\n  }\n}\n","/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable @next/next/no-img-element */\nimport type { NextPage } from \"next\";\nimport { useEffect, useRef } from \"react\";\n// Tiles System\nimport { RendererClassic, RendererTiling } from \"../../modules/tiles\";\nimport { RendererBase } from \"../../modules/tiles/renderer-base\";\nimport { WidgetManager } from \"../../modules/tiles/widget-manager\";\nimport styles from \"./tiles_page_style.module.css\";\n\nconst TilesAPI: NextPage = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const widgetManagerRef = useRef<WidgetManager>(null);\n  const rendererRef = useRef<RendererBase>(null);\n  useEffect(() => {\n    // Constructor\n    if (canvasRef.current) {\n      widgetManagerRef.current = new WidgetManager();\n      rendererRef.current = new RendererTiling({\n        canvas: canvasRef.current,\n        widgetManager: widgetManagerRef.current,\n      });\n    }\n    // Destructor\n    return () => {\n      rendererRef.current.destroy();\n      rendererRef.current = null;\n    };\n  }, []);\n\n  function setTiling() {\n    rendererRef.current?.destroy();\n    rendererRef.current = new RendererTiling({\n      canvas: canvasRef.current,\n      widgetManager: widgetManagerRef.current,\n    });\n  }\n\n  function setClassic() {\n    rendererRef.current?.destroy();\n    rendererRef.current = new RendererClassic({\n      canvas: canvasRef.current,\n      widgetManager: widgetManagerRef.current,\n    });\n  }\n\n  function zoomInAutomation() {\n    rendererRef.current.navigationManager.zoomInAutomation();\n  }\n\n  function zoomOutAutomation() {\n    rendererRef.current.navigationManager.zoomOutAutomation();\n  }\n\n  function panAutomation() {\n    rendererRef.current.navigationManager.panAutomation();\n  }\n\n  return (\n    <div>\n      <div>\n        <h2 className={styles.title}>[PoC] Tiles API</h2>\n        <canvas ref={canvasRef} className={styles.canvas} />\n        <div>\n          <button onClick={setTiling}>Tiling</button>\n          <button onClick={setClassic}>Classic</button>\n          <button onClick={zoomInAutomation}>Zoom in</button>\n          <button onClick={zoomOutAutomation}>Zoom out</button>\n          <button onClick={panAutomation}>Pan</button>\n        </div>\n        <div id=\"widgetInfo\" className={styles.widgetInfo}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default TilesAPI;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"tiles_page_style_title__1_eLA\",\"canvas\":\"tiles_page_style_canvas__vTT1w\",\"widgetInfo\":\"tiles_page_style_widgetInfo__9p8nX\"};"],"names":["window","__NEXT_P","push","NavigationManager","renderer","_lastCursorPosition","x","y","_navigationStartCursorPosition","undefined","_isInvalid","_isZooming","_deltaPan","_time","_frames","onMouseWheel","event","preventDefault","position","getMousePosition","delta","deltaMode","deltaY","zoomBy","_startNavigation","canvas","container","addEventListener","_navigate","_endNavigation","removeEventListener","lastCursorPosition","lastDragPosition","deltaX","panBy","this","width","height","scale","refresh","needsRender","cursor","Math","min","max","clearTimeout","_endZoomTimeout","setTimeout","reset","render","canvasOffset","zoomOutAutomation","performance","now","automate","requestAnimationFrame","console","log","zoomInAutomation","panAutomation","CANVAS_WIDTH","CANVAS_HEIGHT","destroy","RendererBase","widgetManager","renderedWidgets","renderedTiles","_location","dispatchMouseOrWheelOverEvent","setMousePosition","clientX","clientY","ctx","getContext","Error","_container","_context","navigationManager","capture","captureLocation","bind","context","background","color","fillStyle","fillRect","params","_render","document","getElementById","innerText","numWidgets","_requestID","onViewportUpdate","callback","cancelAnimationFrame","clientToEngineSpace","_lastMousePosition","drawContext","box","fromWidgets","widgets","getWidgets","clearRect","forEach","widget","drawImage","image","length","getVisualUpdateParamsBox","getBoundingClientRect","left","top","isWithin","p","b","px","py","bx0","by0","bx1","by1","intersects","a","ax0","ay0","ax1","ay1","TILE_INDICES","Tile","createElement","RendererTiling","props","tileWidth","tileHeight","tiles","map","viewport","moveTilesLeft","moveTilesRight","moveTilesUp","moveTilesDown","resetTiles","contains","tile","some","renderTiles","renderViewport","renderTile","index","tileBox","viewportScaledWidth","viewportScaledHeight","x0","x1","x2","y0","y1","y2","scaleRatio","w0","w1","h0","h1","strokeStyle","strokeRect","invalidateTiles","indices","swapTilesX","swapTilesY","RendererClassic","Widget","getBoundary","WidgetManager","worldBox","assets","i","asset","src","toString","padStart","createWidgets","result","widgetBox","newWorldBox","assetIndex","floor","random","canvasRef","useRef","widgetManagerRef","rendererRef","useEffect","current","div","h2","className","styles","ref","button","onClick","id","module","exports"],"sourceRoot":""}