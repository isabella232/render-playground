{"version":3,"file":"static/chunks/pages/tiles-bcc9d9c0786a4e4c.js","mappings":"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","sources":["webpack://_N_E/?0a53","webpack://_N_E/./modules/tiles/navigation-manager.ts","webpack://_N_E/./modules/tiles/renderer-base.ts","webpack://_N_E/./modules/tiles/renderer-classic.ts","webpack://_N_E/./modules/tiles/types.ts","webpack://_N_E/./modules/tiles/renderer-tiling.ts","webpack://_N_E/./modules/tiles/renderer-tiling2.ts","webpack://_N_E/./modules/tiles/widget.ts","webpack://_N_E/./modules/tiles/widget-manager.ts","webpack://_N_E/./pages/tiles/index.tsx","webpack://_N_E/./pages/tiles/tiles_page_style.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tiles\",\n      function () {\n        return require(\"private-next-pages/tiles/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tiles\"])\n      });\n    }\n  ","import { CANVAS_HEIGHT, CANVAS_WIDTH, RendererBase } from \"./renderer-base\";\nimport { IPoint } from \"./types\";\n\nexport class NavigationManager {\n  private _lastCursorPosition: IPoint = { x: 0, y: 0 };\n  private _navigationStartCursorPosition: IPoint | undefined = undefined;\n\n  private _isInvalid: boolean = true;\n  private _isZooming: boolean = false;\n  public position: IPoint;\n  public scale: number;\n\n  private _deltaPan: IPoint = { x: 0, y: 0 };\n  private _endZoomTimeout: NodeJS.Timeout;\n\n  private _time = 0;\n  private _frames = 0;\n\n  constructor(readonly renderer: RendererBase) {\n    const canvas = this.renderer.container;\n    this.position = { x: canvas.width * 0.5, y: canvas.height * 0.5 };\n    this.scale = 1;\n\n    canvas.addEventListener(\"pointerdown\", this._startNavigation, false);\n    canvas.addEventListener(\"wheel\", this.onMouseWheel, false);\n  }\n\n  refresh() {\n    const needsRender = this._isInvalid || this._isZooming;\n    if (this._isInvalid) {\n      // update position of the camera\n      this.position.x = this.position.x + this._deltaPan.x;\n      this.position.y = this.position.y + this._deltaPan.y;\n      this._deltaPan.x = 0;\n      this._deltaPan.y = 0;\n      this._isInvalid = false;\n    }\n    return needsRender;\n  }\n\n  zoomBy(delta: number, cursor?: IPoint): this {\n    const newScale = Math.min(Math.max(this.scale * (1 + delta * 0.01), 0.04), 4);\n    if (newScale !== this.scale) {\n      this.scale = Math.min(Math.max(this.scale * (1 + delta * 0.01), 0.04), 4);\n      clearTimeout(this._endZoomTimeout);\n      this._endZoomTimeout = setTimeout(() => {\n        this.renderer.reset();\n        this.renderer.render({ canvasOffset: this.position, scale: this.scale });\n        this._isZooming = false;\n      }, 100);\n      this._isZooming = true;\n    }\n    return this;\n  }\n\n  panBy(deltaX: number, deltaY: number): this {\n    this._deltaPan.x = deltaX / this.scale;\n    this._deltaPan.y = deltaY / this.scale;\n    // require refresh\n    this._isInvalid = true;\n    return this;\n  }\n\n  zoomOutAutomation() {\n    this.position = { x: 0, y: 0 };\n    this.scale = 4;\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.scale > 0.04) {\n        this.zoomBy(-1);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  zoomInAutomation() {\n    this.position = { x: 0, y: 0 };\n    this.scale = 0.04;\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.scale < 4) {\n        this.zoomBy(1);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  panAutomation() {\n    this.scale = 0.04;\n    this.position = { x: -37.5 * CANVAS_WIDTH, y: -37.5 * CANVAS_HEIGHT };\n    this._time = performance.now();\n    this._frames = 0;\n\n    const automate = () => {\n      if (this.position.x < 37.5 * CANVAS_WIDTH) {\n        this.panBy(0.01 * CANVAS_WIDTH, 0.01 * CANVAS_HEIGHT);\n        this._frames += 1;\n        requestAnimationFrame(() => automate());\n      } else {\n        console.log((1000 * this._frames) / (performance.now() - this._time), \"fps\");\n      }\n    };\n\n    automate();\n  }\n\n  destroy() {\n    const canvas = this.renderer.container;\n    canvas.removeEventListener(\"pointermove\", this._navigate, false);\n    canvas.removeEventListener(\"pointerup\", this._endNavigation, false);\n    canvas.removeEventListener(\"pointerdown\", this._startNavigation, false);\n    canvas.removeEventListener(\"wheel\", this.onMouseWheel, false);\n  }\n\n  private onMouseWheel = (event: WheelEvent) => {\n    event.preventDefault();\n    const position = this.renderer.getMousePosition();\n    this._navigationStartCursorPosition = { ...position };\n    // const deltaYFactor = isMac ? -1 : -3;\n    const deltaYFactor = -1;\n    const delta =\n      event.deltaMode === 1 ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n    this.zoomBy(delta, this._navigationStartCursorPosition);\n  };\n\n  private _startNavigation = (event: PointerEvent) => {\n    const canvas = this.renderer.container;\n    const position = this.renderer.getMousePosition();\n    this._lastCursorPosition.x = position.x;\n    this._lastCursorPosition.y = position.y;\n    // this._navigationStartCursorPosition.x = position.x;\n    // this._navigationStartCursorPosition.y = position.y;\n\n    canvas.addEventListener(\"pointermove\", this._navigate, false);\n    canvas.addEventListener(\"pointerup\", this._endNavigation, false);\n\n    canvas.removeEventListener(\"pointerdown\", this._startNavigation, false);\n  };\n\n  private _endNavigation = (event: PointerEvent) => {\n    const canvas = this.renderer.container;\n    canvas.removeEventListener(\"pointermove\", this._navigate, false);\n    canvas.removeEventListener(\"pointerup\", this._endNavigation, false);\n    canvas.addEventListener(\"pointerdown\", this._startNavigation, false);\n  };\n\n  private _navigate = (event: PointerEvent) => {\n    const lastCursorPosition = this._lastCursorPosition;\n    const lastDragPosition = this.renderer.getMousePosition();\n    const deltaX = lastCursorPosition.x - lastDragPosition.x;\n    const deltaY = lastCursorPosition.y - lastDragPosition.y;\n    this._lastCursorPosition.x = lastDragPosition.x;\n    this._lastCursorPosition.y = lastDragPosition.y;\n    this.panBy(deltaX, deltaY);\n  };\n}\n","import { NavigationManager } from './navigation-manager';\nimport { BoundaryBox, IPoint, ViewportUpdateCallback, VisualUpdateParams } from './types';\nimport { Widget } from './widget';\nimport { WidgetManager } from './widget-manager';\n\nexport const CANVAS_WIDTH = 1280;\nexport const CANVAS_HEIGHT = 800;\n\nexport interface RendererProps {\n  canvas: HTMLCanvasElement;\n  widgetManager: WidgetManager;\n}\n\nexport abstract class RendererBase {\n  public renderedWidgets = 0;\n  public renderedTiles = 0;\n\n  /**\n   * container location on HTML page (top-left)\n   */\n  private _location: IPoint = { x: 0, y: 0 };\n  /**\n   * last cached cursor position\n   */\n  private _lastMousePosition?: IPoint;\n\n  protected _container: HTMLCanvasElement;\n  protected _context: CanvasRenderingContext2D;\n  protected _requestID: number;\n\n  protected widgetManager: WidgetManager;\n  navigationManager: NavigationManager;\n\n  constructor({ canvas, widgetManager }: RendererProps) {\n    const ctx = canvas.getContext('2d');\n\n    if (ctx === null) {\n      throw new Error('Canvas2D renderer is uninitialized!');\n    }\n\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n\n    this._container = canvas;\n    this._context = ctx;\n\n    this.widgetManager = widgetManager;\n    this.navigationManager = new NavigationManager(this);\n\n    this._container.addEventListener('pointerover', this.dispatchMouseOrWheelOverEvent);\n    this._container.addEventListener('pointermove', this.dispatchMouseOrWheelOverEvent);\n    this._container.addEventListener('wheel', this.dispatchMouseOrWheelOverEvent, {\n      capture: true\n    });\n    window.addEventListener('scroll', this.captureLocation.bind(this));\n\n    // initialize location of the canvas\n    this.captureLocation();\n\n    // Start rendering loop\n    setTimeout(this.refresh, 1000);\n  }\n\n  get container(): HTMLCanvasElement {\n    return this._container;\n  }\n\n  get context(): CanvasRenderingContext2D {\n    return this._context;\n  }\n\n  background(color: string) {\n    const ctx = this._context;\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  }\n\n  render(params: VisualUpdateParams): void {\n    this._render(params);\n    document.getElementById('widgetInfo').innerText = `\n      Total widgets: ${this.widgetManager.numWidgets}\n      rendered widgets: ${this.renderedWidgets}\n      rendered tiles: ${this.renderedTiles}\n    `;\n  }\n\n  abstract _render(params: VisualUpdateParams): void;\n\n  abstract reset(): void;\n\n  refresh = () => {\n    if (!this.navigationManager) return;\n\n    const needsRender = this.navigationManager.refresh();\n\n    if (needsRender) {\n      this.render({\n        canvasOffset: this.navigationManager.position,\n        scale: this.navigationManager.scale\n      });\n    }\n    this._requestID = requestAnimationFrame(this.refresh);\n  };\n\n  onViewportUpdate(callback: ViewportUpdateCallback) {\n  }\n\n  destroy() {\n    cancelAnimationFrame(this._requestID);\n    this.navigationManager.destroy();\n    this.navigationManager = null;\n  }\n\n  clientToEngineSpace(x: number, y: number): IPoint {\n    return { x: x - this._location.x, y: y - this._location.y };\n  }\n\n  setMousePosition(x: number, y: number): IPoint {\n    const position = this.clientToEngineSpace(x, y);\n    this._lastMousePosition = position;\n    return this._lastMousePosition;\n  }\n\n  getMousePosition(): IPoint | undefined {\n    return this._lastMousePosition;\n  }\n\n  protected drawContext(\n    context: CanvasRenderingContext2D,\n    box: BoundaryBox,\n    scale: number,\n    fromWidgets?: Widget[]\n  ): void {\n    const widgets = this.widgetManager.getWidgets(box, fromWidgets);\n    context.clearRect(0, 0, this._container.width, this._container.width);\n    widgets.forEach((widget) => {\n      context.drawImage(\n        widget.image,\n        (widget.position.x - box.x) * scale,\n        (widget.position.y - box.y) * scale,\n        // Images are stored at 4x resolution\n        (widget.image.width * scale) / 4,\n        (widget.image.height * scale) / 4\n      );\n    });\n    this.renderedWidgets += widgets.length;\n    this.renderedTiles += 1;\n  }\n\n  protected getVisualUpdateParamsBox(params: VisualUpdateParams) {\n    const width = this._container.width / params.scale;\n    const height = this._container.height / params.scale;\n    const x = params.canvasOffset.x - width / 2;\n    const y = params.canvasOffset.y - height / 2;\n    return { x, y, width, height };\n  }\n\n  private captureLocation(): void {\n    const canvas = this._container;\n    const { left, top } = canvas.getBoundingClientRect();\n    this._location.x = left;\n    this._location.y = top;\n  }\n\n  private dispatchMouseOrWheelOverEvent = (event: MouseEvent | WheelEvent | PointerEvent) => {\n    this.setMousePosition(event.clientX, event.clientY);\n  };\n}\n","import { RendererBase } from \"./renderer-base\";\nimport { VisualUpdateParams } from \"./types\";\n\nexport class RendererClassic extends RendererBase {\n  _render(params: VisualUpdateParams): void {\n    const box = this.getVisualUpdateParamsBox(params);\n    this.renderedWidgets = 0;\n    this.drawContext(this.context, box, params.scale);\n  }\n\n  reset() {}\n}\n","export interface IPoint {\n  x: number;\n  y: number;\n}\n\nexport interface ISize {\n  width: number;\n  height: number;\n}\n\nexport interface BoundaryBox extends IPoint, ISize {}\n\nexport interface VisualUpdateParams {\n  /**\n   * Middle of the canvas\n   */\n  canvasOffset: IPoint;\n  /**\n   * Width and Height of the canvas\n   */\n  /**\n   * Zoom level of the canvas\n   */\n  scale: number;\n}\n\nexport type ViewportUpdateCallback = (params: VisualUpdateParams) => void;\n\nexport function isWithin(p: IPoint, b: BoundaryBox) {\n  const px = p.x;\n  const py = p.y;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return px > bx0 && px < bx1 && py > by0 && py < by1;\n}\n\nexport function intersects(a: BoundaryBox, b: BoundaryBox) {\n  const ax0 = a.x;\n  const ay0 = a.y;\n  const ax1 = a.x + a.width;\n  const ay1 = a.y + a.height;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return bx1 > ax0 && bx0 < ax1 && by1 > ay0 && by0 < ay1;\n}\n\nexport function contains(a: BoundaryBox, b: BoundaryBox) {\n  const ax0 = a.x;\n  const ay0 = a.y;\n  const ax1 = a.x + a.width;\n  const ay1 = a.y + a.height;\n  const bx0 = b.x;\n  const by0 = b.y;\n  const bx1 = b.x + b.width;\n  const by1 = b.y + b.height;\n\n  return bx0 > ax0 && bx1 < ax1 && by0 > ay0 && by1 < ay1;\n}\n","import { RendererBase, RendererProps } from \"./renderer-base\";\nimport { BoundaryBox, contains, intersects, VisualUpdateParams } from \"./types\";\nimport { Widget } from \"./widget\";\n\nconst TILE_INDICES = [0, 1, 2, 3];\n\nclass Tile {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  needsRender = false;\n\n  constructor(width: number, height: number) {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n}\n\nexport class RendererTiling extends RendererBase implements BoundaryBox {\n  x = 0;\n  y = 0;\n  width = 0;\n  height = 0;\n  scale = 0;\n\n  private tileWidth = 0;\n  private tileHeight = 0;\n  private tiles: Tile[];\n\n  constructor(props: RendererProps) {\n    super(props);\n    this.tiles = TILE_INDICES.map(() => {\n      return new Tile(this.container.width, this.container.height);\n    });\n  }\n\n  _render(params: VisualUpdateParams) {\n    const viewport = this.getVisualUpdateParamsBox(params);\n\n    // Scale unchanged - panning\n    if (params.scale === this.scale) {\n      // Viewport completely outside of tiles - redraw everything\n      if (!intersects(this, viewport)) {\n        this.resetTiles(viewport, params.scale);\n      } else {\n        // Handle shift on X axis\n        if (viewport.x < this.x) {\n          this.moveTilesLeft();\n        } else if (viewport.x > this.x + this.tileWidth) {\n          this.moveTilesRight();\n        }\n        // Handle shift on Y axis\n        if (viewport.y < this.y) {\n          this.moveTilesUp();\n        } else if (viewport.y > this.y + this.tileHeight) {\n          this.moveTilesDown();\n        }\n      }\n      // Scale changed - zooming. Handle redraw if tiles are too small\n    } else if (!contains(this, viewport) || viewport.width < this.tileWidth / 2) {\n      this.resetTiles(viewport, params.scale);\n    }\n\n    let widgets;\n\n    if (this.tiles.map((tile) => tile.needsRender).some((needsRender) => needsRender)) {\n      this.renderedWidgets = 0;\n      widgets = this.widgetManager.getWidgets(this);\n    }\n\n    this.renderTiles(widgets);\n    this.renderViewport(viewport, params.scale);\n  }\n\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.scale = 0;\n    this.tileWidth = 0;\n    this.tileHeight = 0;\n  }\n\n  private renderTile(index: number, widgets?: Widget[]): void {\n    const tile = this.tiles[index];\n\n    if (!tile.needsRender) {\n      return;\n    }\n\n    const tileBox = {\n      x: index % 2 === 0 ? this.x : this.x + this.tileWidth,\n      y: index < 2 ? this.y : this.y + this.tileHeight,\n      width: this.tileWidth,\n      height: this.tileHeight,\n    };\n\n    this.drawContext(tile.ctx, tileBox, this.scale, widgets);\n    tile.needsRender = false;\n  }\n\n  private renderTiles(widgets?: Widget[]): void {\n    TILE_INDICES.forEach((index) => this.renderTile(index, widgets));\n  }\n\n  private renderViewport(viewport: BoundaryBox, scale: number) {\n    const viewportScaledWidth = viewport.width * this.scale;\n    const viewportScaledHeight = viewport.height * this.scale;\n\n    const x0 = (viewport.x - this.x) * this.scale;\n    const x1 = Math.min(viewportScaledWidth, this.container.width - x0);\n    const x2 = viewportScaledWidth - x1;\n    const y0 = (viewport.y - this.y) * this.scale;\n    const y1 = Math.min(viewportScaledHeight, this.container.height - y0);\n    const y2 = viewportScaledHeight - y1;\n\n    const scaleRatio = scale / this.scale;\n\n    const w0 = x1 * scaleRatio;\n    const w1 = x2 * scaleRatio;\n    const h0 = y1 * scaleRatio;\n    const h1 = y2 * scaleRatio;\n\n    this.context.clearRect(0, 0, this.container.width, this.container.height);\n\n    this.context.drawImage(this.tiles[0].canvas, x0, y0, x1, y1, 0, 0, w0, h0);\n    this.context.drawImage(this.tiles[1].canvas, 0, y0, x2, y1, w0, 0, w1, h0);\n    this.context.drawImage(this.tiles[2].canvas, x0, 0, x1, y2, 0, h0, w0, h1);\n    this.context.drawImage(this.tiles[3].canvas, 0, 0, x2, y2, w0, h0, w1, h1);\n\n    this.context.strokeStyle = \"#FF0000\";\n\n    this.context.strokeRect(0, 0, w0, h0);\n    this.context.strokeRect(w0, 0, w1, h0);\n    this.context.strokeRect(0, h0, w0, h1);\n    this.context.strokeRect(w0, h0, w1, h1);\n  }\n\n  private invalidateTiles(...indices: number[]): void {\n    indices.forEach((index) => (this.tiles[index].needsRender = true));\n  }\n\n  private swapTilesX(): void {\n    this.tiles = [this.tiles[1], this.tiles[0], this.tiles[3], this.tiles[2]];\n  }\n\n  private swapTilesY(): void {\n    this.tiles = [this.tiles[2], this.tiles[3], this.tiles[0], this.tiles[1]];\n  }\n\n  private moveTilesLeft(): void {\n    this.swapTilesX();\n    this.invalidateTiles(0, 2);\n    this.x -= this.tileWidth;\n  }\n\n  private moveTilesRight(): void {\n    this.swapTilesX();\n    this.invalidateTiles(1, 3);\n    this.x += this.tileWidth;\n  }\n\n  private moveTilesUp(): void {\n    this.swapTilesY();\n    this.invalidateTiles(0, 1);\n    this.y -= this.tileHeight;\n  }\n\n  private moveTilesDown(): void {\n    this.swapTilesY();\n    this.invalidateTiles(2, 3);\n    this.y += this.tileHeight;\n  }\n\n  private resetTiles(viewport: BoundaryBox, scale: number): void {\n    this.invalidateTiles(0, 1, 2, 3);\n    this.x = viewport.x - viewport.width / 2;\n    this.y = viewport.y - viewport.height / 2;\n    this.width = viewport.width * 2;\n    this.height = viewport.height * 2;\n    this.scale = scale;\n    this.tileWidth = viewport.width;\n    this.tileHeight = viewport.height;\n  }\n}\n","import { RendererBase, RendererProps } from './renderer-base';\nimport { BoundaryBox, contains, intersects, IPoint, VisualUpdateParams } from './types';\nimport { Widget } from './widget';\n\ninterface TilingRendererProps extends RendererProps {\n  tileSize?: number;\n  minZoomLevel?: number;\n  maxZoomLevel?: number;\n  showTiles?: boolean;\n}\n\nconst TILE_INDICES = [0, 1, 2, 3];\n\nclass Tile {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n  needsRender = false;\n\n  constructor(width: number, height: number) {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx = this.canvas.getContext('2d');\n  }\n}\n\nclass TileMath {\n  // Calculates width and height of the world in pixels at a specific zoom level.\n  static worldSize(zoom: number, tileSize: number): number {\n    return Math.ceil(tileSize * Math.pow(2, zoom));\n  }\n\n  static zoomLevel(worldSize: number, tileSize: number): number {\n    return Math.ceil(Math.log(worldSize / tileSize) / Math.log(2));\n  }\n\n  static clip(n: number, minValue: number, maxValue: number): number {\n    return Math.min(Math.max(n, minValue), maxValue);\n  }\n\n  // Converts pixel XY coordinates into tile XY coordinates of the tile containing the specified pixel.\n  static worldToTilePoint(point: IPoint, tileSize: number): IPoint {\n    return {\n      x: Math.trunc(point.x / tileSize),\n      y: Math.trunc(point.y / tileSize)\n    };\n  }\n\n  // Performs a scale transform on a global pixel value from one zoom level to another.\n  static scaleWorldPoint(point: IPoint, oldZoom: number, newZoom: number): IPoint {\n    const scale = Math.pow(2, oldZoom - newZoom);\n\n    return { x: point.x * scale, y: point.y * scale };\n  }\n\n  // Converts tile XY coordinates into a global pixel XY coordinates of the upper-left pixel of the specified tile.\n  static tileToWorldPoint(tilePoint: IPoint, tileSize: number): IPoint {\n    return { x: tilePoint.x * tileSize, y: tilePoint.y * tileSize };\n  }\n\n  // Converts tile XY coordinates into a quadkey at a specified level of detail.\n  static tilePointToQuadKey(tilePoint: IPoint, zoom: number): string {\n    const quadKey: number[] = [];\n    for (let i = zoom; i > 0; i--) {\n      const mask = 1 << (i - 1);\n      let digit = 0;\n\n      if ((tilePoint.x & mask) != 0) {\n        digit++;\n      }\n\n      if ((tilePoint.y & mask) != 0) {\n        digit += 2;\n      }\n\n      quadKey.push(digit);\n    }\n\n    return quadKey.join('');\n  }\n\n  // Converts a quadkey into tile XY coordinates.\n  static quadKeyToTilePoint(quadKey: string): { tilePoint: IPoint, zoom: number } {\n    let tileX = 0;\n    let tileY = 0;\n    let zoom = quadKey.length;\n\n    for (let i = zoom; i > 0; i--) {\n      const mask = 1 << (i - 1);\n\n      switch (quadKey[zoom - i]) {\n        case '0':\n          break;\n\n        case '1':\n          tileX |= mask;\n          break;\n\n        case '2':\n          tileY |= mask;\n          break;\n\n        case '3':\n          tileX |= mask;\n          tileY |= mask;\n          break;\n\n        default:\n          throw 'Invalid QuadKey digit sequence.';\n      }\n    }\n\n    return {\n      tilePoint: { x: tileX, y: tileY },\n      zoom\n    };\n  }\n\n}\n\nexport class RendererTiling2 extends RendererBase implements BoundaryBox {\n  x = 0;\n  y = 0;\n  width = 0;\n  height = 0;\n  scale = 0;\n\n  private minZoomLevel = 1;\n  private maxZoomLevel = 20;\n  private currentZoomLevel = 1;\n  private numberOfTilesWide = 0;\n  private numberOfTilesHigh = 0;\n\n  private tileWidth = 0;\n  private tileHeight = 0;\n  private tiles: Tile[];\n\n  constructor(props: TilingRendererProps) {\n    super(props);\n\n    this.minZoomLevel = props.minZoomLevel || 1;\n    this.maxZoomLevel = props.maxZoomLevel || 20;\n\n    if (this.minZoomLevel > this.maxZoomLevel) {\n      this.minZoomLevel = this.maxZoomLevel\n    }\n\n    this.currentZoomLevel = this.minZoomLevel;\n    this.numberOfTilesWide = Math.pow(2, this.currentZoomLevel);\n    this.numberOfTilesHigh = this.numberOfTilesWide;\n\n    this.tiles = TILE_INDICES.map(() => {\n      return new Tile(this.container.width, this.container.height);\n    });\n  }\n\n  _render(params: VisualUpdateParams) {\n    const viewport = this.getVisualUpdateParamsBox(params);\n\n    // Scale unchanged - panning\n    if (params.scale === this.scale) {\n      // Viewport completely outside of tiles - redraw everything\n      if (!intersects(this, viewport)) {\n        this.resetTiles(viewport, params.scale);\n      } else {\n        // Handle shift on X axis\n        if (viewport.x < this.x) {\n          this.moveTilesLeft();\n        } else if (viewport.x > this.x + this.tileWidth) {\n          this.moveTilesRight();\n        }\n        // Handle shift on Y axis\n        if (viewport.y < this.y) {\n          this.moveTilesUp();\n        } else if (viewport.y > this.y + this.tileHeight) {\n          this.moveTilesDown();\n        }\n      }\n      // Scale changed - zooming. Handle redraw if tiles are too small\n    } else if (!contains(this, viewport) || viewport.width < this.tileWidth / 2) {\n      this.resetTiles(viewport, params.scale);\n    }\n\n    let widgets;\n\n    if (this.tiles.map((tile) => tile.needsRender).some((needsRender) => needsRender)) {\n      this.renderedWidgets = 0;\n      widgets = this.widgetManager.getWidgets(this);\n    }\n\n    this.renderTiles(widgets);\n    this.renderViewport(viewport, params.scale);\n  }\n\n  reset() {\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.scale = 0;\n    this.tileWidth = 0;\n    this.tileHeight = 0;\n  }\n\n  private renderTile(index: number, widgets?: Widget[]): void {\n    const tile = this.tiles[index];\n\n    if (!tile.needsRender) {\n      return;\n    }\n\n    const tileBox = {\n      x: index % 2 === 0 ? this.x : this.x + this.tileWidth,\n      y: index < 2 ? this.y : this.y + this.tileHeight,\n      width: this.tileWidth,\n      height: this.tileHeight\n    };\n\n    this.drawContext(tile.ctx, tileBox, this.scale, widgets);\n    tile.needsRender = false;\n  }\n\n  private renderTiles(widgets?: Widget[]): void {\n    TILE_INDICES.forEach((index) => this.renderTile(index, widgets));\n  }\n\n  private renderViewport(viewport: BoundaryBox, scale: number) {\n    const viewportScaledWidth = viewport.width * this.scale;\n    const viewportScaledHeight = viewport.height * this.scale;\n\n    const x0 = (viewport.x - this.x) * this.scale;\n    const x1 = Math.min(viewportScaledWidth, this.container.width - x0);\n    const x2 = viewportScaledWidth - x1;\n    const y0 = (viewport.y - this.y) * this.scale;\n    const y1 = Math.min(viewportScaledHeight, this.container.height - y0);\n    const y2 = viewportScaledHeight - y1;\n\n    const scaleRatio = scale / this.scale;\n\n    const w0 = x1 * scaleRatio;\n    const w1 = x2 * scaleRatio;\n    const h0 = y1 * scaleRatio;\n    const h1 = y2 * scaleRatio;\n\n    this.context.clearRect(0, 0, this.container.width, this.container.height);\n\n    this.context.drawImage(this.tiles[0].canvas, x0, y0, x1, y1, 0, 0, w0, h0);\n    this.context.drawImage(this.tiles[1].canvas, 0, y0, x2, y1, w0, 0, w1, h0);\n    this.context.drawImage(this.tiles[2].canvas, x0, 0, x1, y2, 0, h0, w0, h1);\n    this.context.drawImage(this.tiles[3].canvas, 0, 0, x2, y2, w0, h0, w1, h1);\n\n    this.context.strokeStyle = '#ff0000';\n\n    this.context.strokeRect(0, 0, w0, h0);\n    this.context.strokeRect(w0, 0, w1, h0);\n    this.context.strokeRect(0, h0, w0, h1);\n    this.context.strokeRect(w0, h0, w1, h1);\n  }\n\n  private invalidateTiles(...indices: number[]): void {\n    indices.forEach((index) => (this.tiles[index].needsRender = true));\n  }\n\n  private swapTilesX(): void {\n    this.tiles = [this.tiles[1], this.tiles[0], this.tiles[3], this.tiles[2]];\n  }\n\n  private swapTilesY(): void {\n    this.tiles = [this.tiles[2], this.tiles[3], this.tiles[0], this.tiles[1]];\n  }\n\n  private moveTilesLeft(): void {\n    this.swapTilesX();\n    this.invalidateTiles(0, 2);\n    this.x -= this.tileWidth;\n  }\n\n  private moveTilesRight(): void {\n    this.swapTilesX();\n    this.invalidateTiles(1, 3);\n    this.x += this.tileWidth;\n  }\n\n  private moveTilesUp(): void {\n    this.swapTilesY();\n    this.invalidateTiles(0, 1);\n    this.y -= this.tileHeight;\n  }\n\n  private moveTilesDown(): void {\n    this.swapTilesY();\n    this.invalidateTiles(2, 3);\n    this.y += this.tileHeight;\n  }\n\n  private resetTiles(viewport: BoundaryBox, scale: number): void {\n    this.invalidateTiles(0, 1, 2, 3);\n    this.x = viewport.x - viewport.width / 2;\n    this.y = viewport.y - viewport.height / 2;\n    this.width = viewport.width * 2;\n    this.height = viewport.height * 2;\n    this.scale = scale;\n    this.tileWidth = viewport.width;\n    this.tileHeight = viewport.height;\n  }\n}\n","import { BoundaryBox, IPoint } from \"./types\";\n\nexport class Widget {\n  constructor(public image: HTMLImageElement, public position: IPoint) {}\n\n  getBoundary(): BoundaryBox {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      // Images are stored at 4x resolution\n      width: this.image.width / 4,\n      height: this.image.height / 4,\n    };\n  }\n}\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./renderer-base\";\nimport { BoundaryBox, intersects, isWithin } from \"./types\";\nimport { Widget } from \"./widget\";\n\nconst AVG_DISTANCE = 200;\n\ninterface WidgetManagerOptions {\n  assetPrefix?: string\n}\n\nexport class WidgetManager {\n  private worldBox: BoundaryBox = { x: 0, y: 0, width: 0, height: 0 };\n  private assets: HTMLImageElement[] = [];\n  private widgets: Widget[] = [];\n\n  get numWidgets() {\n    return this.widgets.length;\n  }\n\n  constructor({ assetPrefix = '' }: WidgetManagerOptions = {}) {\n    for (let i = 1; i < 67; i++) {\n      const asset = document.createElement(\"img\");\n      asset.src = `${assetPrefix}/tiles/${i.toString().padStart(2, \"0\")}.png`;\n      this.assets.push(asset);\n    }\n\n    this.createWidgets({\n      x: -50 * CANVAS_WIDTH,\n      y: -50 * CANVAS_HEIGHT,\n      width: 100 * CANVAS_WIDTH,\n      height: 100 * CANVAS_HEIGHT,\n    });\n  }\n\n  getWidgets(box: BoundaryBox, widgets = this.widgets) {\n    const result: Widget[] = [];\n\n    widgets.forEach((widget) => {\n      const widgetBox = widget.getBoundary();\n      if (intersects(box, widgetBox)) {\n        result.push(widget);\n      }\n    });\n\n    return result;\n  }\n\n  private createWidgets(box: BoundaryBox) {\n    const x0 = Math.min(this.worldBox.x, box.x);\n    const y0 = Math.min(this.worldBox.y, box.y);\n    const x1 = Math.max(this.worldBox.x + this.worldBox.width, box.x + box.width);\n    const y1 = Math.max(this.worldBox.y + this.worldBox.height, box.y + box.height);\n\n    const newWorldBox: BoundaryBox = {\n      x: x0,\n      y: y0,\n      width: x1 - x0,\n      height: y1 - y0,\n    };\n\n    let x = newWorldBox.x;\n    while (x < newWorldBox.x + newWorldBox.width) {\n      let y = newWorldBox.y;\n      while (y < newWorldBox.y + newWorldBox.height) {\n        if (!isWithin({ x, y }, this.worldBox)) {\n          const assetIndex = Math.floor(Math.random() * this.assets.length);\n          const asset = this.assets[assetIndex];\n          this.widgets.push(new Widget(asset, { x, y }));\n        }\n        y += Math.floor((Math.random() + 0.5) * AVG_DISTANCE);\n      }\n      x += Math.floor((Math.random() + 0.5) * AVG_DISTANCE);\n    }\n    this.worldBox = newWorldBox;\n  }\n}\n","/* eslint-disable jsx-a11y/alt-text */\n/* eslint-disable @next/next/no-img-element */\nimport type { NextPage } from 'next';\nimport React, { useEffect, useRef, useState } from 'react';\nimport getConfig from 'next/config';\n// Tiles System\nimport { RendererClassic, RendererTiling, RendererTiling2 } from '../../modules/tiles';\nimport { RendererBase } from '../../modules/tiles/renderer-base';\nimport { WidgetManager } from '../../modules/tiles/widget-manager';\nimport { buttonGroup, Leva, useControls } from 'leva';\nimport styles from './tiles_page_style.module.css';\n\nconst enum RenderingEngine {\n  Classic = 'classic',\n  Tiling = 'tiling',\n  Tiling2 = 'tiling2'\n}\n\nconst { assetPrefix } = getConfig().publicRuntimeConfig;\n\nconst TilesAPI: NextPage = () => {\n  const [renderingEngine, setRenderingEngine] = useState<RenderingEngine>(RenderingEngine.Tiling2);\n\n  const [{ tileSize, minZoomLevel, maxZoomLevel, showTiles }, set] = useControls(() => ({\n    renderingEngine: {\n      label: 'Rendering Engine',\n      value: renderingEngine,\n      options: {\n        'Classic': 'classic',\n        'Tiling': 'tiling',\n        'Tiling 2': 'tiling2'\n      },\n      onChange: setRenderingEngine\n    },\n    ...(\n      renderingEngine === 'tiling2' ? {\n        tileSize: {\n          label: 'Title Size',\n          value: 512,\n          min: 256,\n          max: 1024,\n          step: 1\n        },\n        minZoomLevel: {\n          label: 'Zoom Level (min)',\n          value: 1,\n          min: 1,\n          max: 20,\n          step: 1\n        },\n        maxZoomLevel: {\n          label: 'Zoom Level (max)',\n          value: 20,\n          min: 1,\n          max: 20,\n          step: 1\n        },\n        showTiles: {\n          label: 'Show Tiles',\n          value: true\n        }\n      } : {}\n    ),\n    zoomIn: buttonGroup({\n      label: 'Zoom-In Automation',\n      opts: {\n        'Start': () => {\n          rendererRef.current.navigationManager.zoomInAutomation();\n        },\n        'Stop': () => {\n          // TODO: Stop automation\n        }\n      },\n    }),\n    zoomOut: buttonGroup({\n      label: 'Zoom-Out Automation',\n      opts: {\n        'Start': () => {\n          rendererRef.current.navigationManager.zoomOutAutomation();\n        },\n        'Stop': () => {\n          // TODO: Stop automation\n        }\n      },\n    }),\n    pan: buttonGroup({\n      label: 'Pan Automation',\n      opts: {\n        'Start': () => {\n          rendererRef.current.navigationManager.panAutomation();\n        },\n        'Stop': () => {\n          // TODO: Stop automation\n        }\n      },\n    }),\n  }), [renderingEngine]);\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const widgetManagerRef = useRef<WidgetManager>(null);\n  const rendererRef = useRef<RendererBase>(null);\n\n  useEffect(() => {\n    widgetManagerRef.current = new WidgetManager({ assetPrefix });\n  }, []);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    switch (renderingEngine) {\n      case RenderingEngine.Classic:\n        rendererRef.current = new RendererClassic({\n          canvas: canvasRef.current,\n          widgetManager: widgetManagerRef.current\n        });\n        break;\n\n      case RenderingEngine.Tiling:\n        rendererRef.current = new RendererTiling({\n          canvas: canvasRef.current,\n          widgetManager: widgetManagerRef.current\n        });\n        break;\n\n      case RenderingEngine.Tiling2:\n        rendererRef.current = new RendererTiling2({\n          canvas: canvasRef.current,\n          widgetManager: widgetManagerRef.current,\n          tileSize,\n          minZoomLevel,\n          maxZoomLevel,\n          showTiles\n        });\n    }\n\n    return () => {\n      rendererRef.current.destroy();\n      rendererRef.current = null;\n    }\n  }, [renderingEngine, tileSize, minZoomLevel, maxZoomLevel, showTiles]);\n\n  return (\n    <div>\n      <div>\n        <h2 className={styles.title}>[PoC] Tiles API</h2>\n        <canvas ref={canvasRef} className={styles.canvas} />\n        <div id=\"widgetInfo\" className={styles.widgetInfo} />\n        <div className={styles.tweaks}>\n          <Leva fill />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TilesAPI;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"tiles_page_style_title__1_eLA\",\"canvas\":\"tiles_page_style_canvas__vTT1w\",\"widgetInfo\":\"tiles_page_style_widgetInfo__9p8nX\",\"tweaks\":\"tiles_page_style_tweaks__0gzJz\"};"],"names":["window","__NEXT_P","push","NavigationManager","renderer","_lastCursorPosition","x","y","_navigationStartCursorPosition","undefined","_isInvalid","_isZooming","_deltaPan","_time","_frames","onMouseWheel","event","preventDefault","position","getMousePosition","delta","deltaMode","deltaY","zoomBy","_startNavigation","canvas","container","addEventListener","_navigate","_endNavigation","removeEventListener","lastCursorPosition","lastDragPosition","deltaX","panBy","this","width","height","scale","refresh","needsRender","cursor","Math","min","max","clearTimeout","_endZoomTimeout","setTimeout","reset","render","canvasOffset","zoomOutAutomation","performance","now","automate","requestAnimationFrame","console","log","zoomInAutomation","panAutomation","CANVAS_WIDTH","CANVAS_HEIGHT","destroy","RendererBase","widgetManager","renderedWidgets","renderedTiles","_location","navigationManager","_requestID","dispatchMouseOrWheelOverEvent","setMousePosition","clientX","clientY","ctx","getContext","Error","_container","_context","capture","captureLocation","bind","context","background","color","fillStyle","fillRect","params","_render","document","getElementById","innerText","numWidgets","onViewportUpdate","callback","cancelAnimationFrame","clientToEngineSpace","_lastMousePosition","drawContext","box","fromWidgets","widgets","getWidgets","clearRect","forEach","widget","drawImage","image","length","getVisualUpdateParamsBox","getBoundingClientRect","left","top","RendererClassic","isWithin","p","b","px","py","bx0","by0","bx1","by1","intersects","a","ax0","ay0","ax1","ay1","contains","TILE_INDICES","Tile","createElement","RendererTiling","props","tileWidth","tileHeight","tiles","map","viewport","moveTilesLeft","moveTilesRight","moveTilesUp","moveTilesDown","resetTiles","tile","some","renderTiles","renderViewport","renderTile","index","tileBox","viewportScaledWidth","viewportScaledHeight","x0","x1","x2","y0","y1","y2","scaleRatio","w0","w1","h0","h1","strokeStyle","strokeRect","invalidateTiles","indices","swapTilesX","swapTilesY","RendererTiling2","minZoomLevel","maxZoomLevel","currentZoomLevel","numberOfTilesWide","numberOfTilesHigh","pow","Widget","getBoundary","RenderingEngine","WidgetManager","assetPrefix","worldBox","assets","i","asset","src","toString","padStart","createWidgets","result","widgetBox","newWorldBox","assetIndex","floor","random","getConfig","publicRuntimeConfig","useState","Tiling2","renderingEngine","setRenderingEngine","useControls","label","value","options","onChange","tileSize","step","showTiles","zoomIn","buttonGroup","opts","rendererRef","current","zoomOut","pan","canvasRef","useRef","widgetManagerRef","useEffect","Classic","Tiling","div","h2","className","styles","ref","id","Leva","fill","module","exports"],"sourceRoot":""}