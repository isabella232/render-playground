(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[121],{8858:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/shapes",function(){return t(9568)}])},7277:function(e,r,t){"use strict";function n(e,r,t){e.enable(e.DEPTH_TEST),e.enable(e.BLEND),e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA);var n=e.createShader(e.VERTEX_SHADER);e.shaderSource(n,r),e.compileShader(n);var o=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(o,t),e.compileShader(o);var a=e.createProgram();return e.attachShader(a,o),e.attachShader(a,n),e.linkProgram(a),e.useProgram(a),a}function o(e,r,t,n,o){var a=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,new Float32Array(o),e.STATIC_DRAW);var i=e.getAttribLocation(r,t);e.vertexAttribPointer(i,n,e.FLOAT,!1,0,0),e.enableVertexAttribArray(i)}function a(e,r){var t=e.createBuffer();e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(r),e.STATIC_DRAW)}function i(e){e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT)}function l(e,r,t){e.viewport(0,0,r.width,r.height),e.drawElements(e.TRIANGLES,t,e.UNSIGNED_SHORT,0)}t.d(r,{ZH:function(){return i},HO:function(){return n},ii:function(){return l},M5:function(){return a},zc:function(){return o}})},9568:function(e,r,t){"use strict";t.r(r),t.d(r,{default:function(){return v}});var n=t(5893),o=t(7294),a=t(5591),i=t.n(a),l=t(7277);function s(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var c=[0,0,1,0,0,1,1,1],u=[0,1,2,3,2,1];var v=function(){var e=(0,o.useRef)(null);return(0,o.useEffect)((function(){e.current&&function(e){var r=function(e){var r,t;(r=n).push.apply(r,s(c)),(t=h).push.apply(t,s(u.map((function(e){return 4*d+e}))));for(var l=0;l<4;l++){var _,C,g,E;(_=o).push.apply(_,s(e.scale)),(C=a).push.apply(C,s(e.translate)),i.push(e.depth),v.push(e.strokeWidth),(g=f).push.apply(g,s(e.strokeColor)),(E=p).push.apply(E,s(e.fillColor))}d+=1},t=e.getContext("webgl");if(t){e.width=800,e.height=640;var n=[],o=[],a=[],i=[],v=[],f=[],p=[],h=[],d=0;r({scale:[.9,.3],translate:[-.1,.5],depth:-.1,strokeWidth:.01,strokeColor:[1,1,1,.1],fillColor:[.75,0,0,.5]}),r({scale:[.8,1.3],translate:[-.6,-.4],depth:-.2,strokeWidth:.03,strokeColor:[1,1,1,.9],fillColor:[0,0,.75,.6]}),r({scale:[1.5,1.2],translate:[-.8,-.8],depth:-.3,strokeWidth:.02,strokeColor:[1,1,1,.5],fillColor:[0,.75,0,.7]});var _=(0,l.HO)(t,"#define GLSLIFY 1\nattribute vec2 position;\nattribute vec2 scale;\nattribute vec2 translate;\nattribute float depth;\nattribute float strokeWidth;\nattribute vec4 fillColor;\nattribute vec4 strokeColor;\n\nvarying vec2 vOuterPosition;\nvarying vec2 vInnerPosition;\nvarying vec4 vFillColor;\nvarying vec4 vStrokeColor;\n\nvoid main() {\n    vec2 uv = (position - 0.5) * scale;\n    vec2 outerRatio = scale * 0.5;\n    vec2 innerRatio = outerRatio - strokeWidth;\n\n    vOuterPosition = uv / outerRatio;\n    vInnerPosition = uv / innerRatio;\n    vFillColor = fillColor;\n    vStrokeColor = strokeColor;\n\n    gl_Position = vec4(position * scale + translate, depth, 1);\n}\n","precision mediump float;\n#define GLSLIFY 1\n\nvarying vec2 vOuterPosition;\nvarying vec2 vInnerPosition;\nvarying vec4 vFillColor;\nvarying vec4 vStrokeColor;\n\nvoid main() {\n    if (dot(vInnerPosition, vInnerPosition) < 1.0) {\n        gl_FragColor = vFillColor;\n    } else if (dot(vOuterPosition, vOuterPosition) < 1.0) {\n        float alphaSum = 2.0 - vStrokeColor.a;\n        vec4 blend = vStrokeColor + vFillColor * (1.0 - vStrokeColor.a);\n        gl_FragColor = vec4(blend.rgb / alphaSum, blend.a);\n    } else {\n        discard;\n    }\n}\n");(0,l.zc)(t,_,"position",2,n),(0,l.zc)(t,_,"scale",2,o),(0,l.zc)(t,_,"translate",2,a),(0,l.zc)(t,_,"depth",1,i),(0,l.zc)(t,_,"strokeWidth",1,v),(0,l.zc)(t,_,"strokeColor",4,f),(0,l.zc)(t,_,"fillColor",4,p),(0,l.M5)(t,h),(0,l.ZH)(t),(0,l.ii)(t,e,h.length)}}(e.current)}),[]),(0,n.jsx)("div",{children:(0,n.jsxs)("div",{children:[(0,n.jsx)("h2",{className:i().title,children:"Ellipses - Alpha blending, single draw call"}),(0,n.jsx)("div",{className:i().card,children:(0,n.jsx)("canvas",{ref:e,className:i().canvas})})]})})}},5591:function(e){e.exports={title:"shapes_page_style_title__1lsqX",card:"shapes_page_style_card__Nyh_7",canvas:"shapes_page_style_canvas__sD12n",option:"shapes_page_style_option__sY0PE"}}},function(e){e.O(0,[774,888,179],(function(){return r=8858,e(e.s=r);var r}));var r=e.O();_N_E=r}]);
//# sourceMappingURL=shapes-585e6e9571540c88.js.map