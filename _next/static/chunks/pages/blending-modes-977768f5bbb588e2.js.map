{"version":3,"file":"static/chunks/pages/blending-modes-977768f5bbb588e2.js","mappings":"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","sources":["webpack://_N_E/?1a2a","webpack://_N_E/./pages/blending-modes/shaders/vertex-shader.glsl","webpack://_N_E/./pages/blending-modes/shaders/fragment-shader.glsl","webpack://_N_E/./pages/blending-modes/index.tsx","webpack://_N_E/./pages/blending-modes/blending_page_style.module.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/blending-modes\",\n      function () {\n        return require(\"private-next-pages/blending-modes/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/blending-modes\"])\n      });\n    }\n  ","export default \"#define GLSLIFY 1\\nattribute vec3 coordinates;\\nuniform vec4 translation;\\n\\nvoid main(void) {\\n    gl_Position = vec4(coordinates, 1) + translation;\\n}\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\nuniform vec4 u_fragColor;\\n\\nvoid main(void) {\\n    gl_FragColor = u_fragColor;\\n\\n    // The line below is essentially what enables the alpha blending.\\n    gl_FragColor.rgb *= u_fragColor.a;\\n}\";","import type { NextPage } from \"next\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport styles from \"./blending_page_style.module.css\";\nimport vertexShader from \"./shaders/vertex-shader.glsl\";\nimport fragmentShader from \"./shaders/fragment-shader.glsl\";\n\nconst CANVAS_WIDTH = 200;\nconst CANVAS_HEIGHT = 200;\n\nfunction experiment1(canvas: HTMLCanvasElement, colors: string[]) {\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) return;\n\n  canvas.width = CANVAS_WIDTH;\n  canvas.height = CANVAS_HEIGHT;\n\n  ctx.save();\n  ctx.fillStyle = colors[0];\n  ctx.fillRect(50, 20, 100, 100);\n  ctx.restore();\n\n  ctx.save();\n  ctx.fillStyle = colors[1];\n  ctx.fillRect(80, 50, 100, 100);\n  ctx.restore();\n\n  ctx.save();\n  ctx.fillStyle = colors[2];\n  ctx.fillRect(20, 80, 100, 100);\n  ctx.restore();\n}\n\nfunction experiment2(\n  canvas: HTMLCanvasElement,\n  options: {\n    colors: [number, number, number, number][];\n    premultipliedAlpha: boolean;\n    blend: boolean;\n    depthTest: boolean;\n  }\n) {\n  console.log(options.premultipliedAlpha);\n  const gl = canvas.getContext(\"webgl\", {\n    premultipliedAlpha: options.premultipliedAlpha,\n  });\n\n  if (!gl) return;\n\n  canvas.width = CANVAS_WIDTH;\n  canvas.height = CANVAS_HEIGHT;\n\n  // prettier-ignore\n  const vertices = [\n    -0.5, 0.5, 0.0,\n    -0.5, -0.5, 0.0,\n    0.5, -0.5, 0.0,\n    0.5, 0.5, 0.0\n  ]\n\n  const indices = [3, 2, 1, 3, 1, 0];\n\n  function init(gl: WebGLRenderingContext) {\n    gl[options.blend ? \"enable\" : \"disable\"](gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl[options.depthTest ? \"enable\" : \"disable\"](gl.DEPTH_TEST);\n\n    // Create vertex shader\n    const vs = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(vs, vertexShader);\n    gl.compileShader(vs);\n\n    // Create fragment shader\n    const fs = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(fs, fragmentShader);\n    gl.compileShader(fs);\n\n    // Link\n    const program = gl.createProgram()!;\n    gl.attachShader(program, fs);\n    gl.attachShader(program, vs);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n\n    // Create buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n    const coords = gl.getAttribLocation(program, \"coordinates\");\n    gl.vertexAttribPointer(coords, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(coords);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    return program;\n  }\n\n  function fillRect(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n    translate: [number, number, number, number],\n    color: [number, number, number, number]\n  ) {\n    const fragColor = gl.getUniformLocation(program, \"u_fragColor\");\n    gl.uniform4f(fragColor, ...color);\n\n    const translation = gl.getUniformLocation(program, \"translation\");\n    gl.uniform4f(translation, ...translate);\n\n    gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\n  }\n\n  const program = init(gl);\n\n  fillRect(gl, program, [0, 0.25, 0, 0], options.colors[0]);\n  fillRect(gl, program, [0.25, 0, 0, 0], options.colors[1]);\n  fillRect(gl, program, [-0.25, -0.25, 0, 0], options.colors[2]);\n}\n\nfunction experiment3(canvas: HTMLCanvasElement, colors: string[]) {\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) return;\n\n  canvas.width = CANVAS_WIDTH;\n  canvas.height = CANVAS_HEIGHT;\n\n  ctx.save();\n  ctx.fillStyle = colors[0];\n  ctx.fillRect(50, 20, 100, 100);\n  ctx.restore();\n\n  ctx.save();\n  ctx.fillStyle = colors[1];\n  ctx.fillRect(80, 50, 100, 100);\n  ctx.restore();\n\n  ctx.save();\n  ctx.fillStyle = colors[2];\n  ctx.fillRect(20, 80, 100, 100);\n  ctx.restore();\n\n  ctx.save();\n  ctx.fillStyle = colors[3];\n  ctx.fillRect(30, 90, 100, 100);\n  ctx.restore();\n}\n\nfunction experiment4(\n  canvas: HTMLCanvasElement,\n  options: {\n    colors: [number, number, number, number][];\n    premultipliedAlpha: boolean;\n    blend: boolean;\n    depthTest: boolean;\n  }\n) {\n  console.log(options.premultipliedAlpha);\n  const gl = canvas.getContext(\"webgl\", {\n    premultipliedAlpha: options.premultipliedAlpha,\n  });\n\n  if (!gl) return;\n\n  canvas.width = CANVAS_WIDTH;\n  canvas.height = CANVAS_HEIGHT;\n\n  // prettier-ignore\n  const vertices = [\n    -0.5, 0.5, 0.0,\n    -0.5, -0.5, 0.0,\n    0.5, -0.5, 0.0,\n    0.5, 0.5, 0.0\n  ]\n\n  const indices = [3, 2, 1, 3, 1, 0];\n\n  function init(gl: WebGLRenderingContext) {\n    gl[options.blend ? \"enable\" : \"disable\"](gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl[options.depthTest ? \"enable\" : \"disable\"](gl.DEPTH_TEST);\n\n    // Create vertex shader\n    const vs = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(vs, vertexShader);\n    gl.compileShader(vs);\n\n    // Create fragment shader\n    const fs = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(fs, fragmentShader);\n    gl.compileShader(fs);\n\n    // Link\n    const program = gl.createProgram()!;\n    gl.attachShader(program, fs);\n    gl.attachShader(program, vs);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n\n    // Create buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n    const coords = gl.getAttribLocation(program, \"coordinates\");\n    gl.vertexAttribPointer(coords, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(coords);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.viewport(0, 0, canvas.width, canvas.height);\n\n    return program;\n  }\n\n  function fillRect(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n    translate: [number, number, number, number],\n    color: [number, number, number, number]\n  ) {\n    const fragColor = gl.getUniformLocation(program, \"u_fragColor\");\n    gl.uniform4f(fragColor, ...color);\n\n    const translation = gl.getUniformLocation(program, \"translation\");\n    gl.uniform4f(translation, ...translate);\n\n    gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_SHORT, 0);\n  }\n\n  const program = init(gl);\n\n  fillRect(gl, program, [-0.15, -0.35, -0.3, 0], options.colors[3]);\n  // gl.disable(gl.DEPTH_TEST)\n  fillRect(gl, program, [0, 0.25, 0, 0], options.colors[0]);\n  fillRect(gl, program, [0.25, 0, -0.1, 0], options.colors[1]);\n  fillRect(gl, program, [-0.25, -0.25, -0.2, 0], options.colors[2]);\n}\n\nconst BlendingModesPage: NextPage = () => {\n  const canvas1 = useRef<HTMLCanvasElement>(null);\n  const canvas2 = useRef<HTMLCanvasElement>(null);\n  const canvas3 = useRef<HTMLCanvasElement>(null);\n  const canvas4 = useRef<HTMLCanvasElement>(null);\n  const canvas5 = useRef<HTMLCanvasElement>(null);\n  const canvas6 = useRef<HTMLCanvasElement>(null);\n  const canvas7 = useRef<HTMLCanvasElement>(null);\n  const canvas8 = useRef<HTMLCanvasElement>(null);\n\n  const [premultipliedAlpha, setPremultipliedAlpha] = useState(true);\n  const [blend, setBlend] = useState(true);\n  const [depthTest, setDepthTest] = useState(false);\n  const resetKey = `${premultipliedAlpha}|${blend}|${depthTest}`;\n\n  const handlePremultipliedAlphaClick = useCallback(() => {\n    setPremultipliedAlpha(!premultipliedAlpha);\n  }, [premultipliedAlpha]);\n\n  const handleBlendClick = useCallback(() => {\n    setBlend(!blend);\n  }, [blend]);\n\n  const handleDepthTestClick = useCallback(() => {\n    setDepthTest(!depthTest);\n  }, [depthTest]);\n\n  useEffect(() => {\n    if (canvas1.current) {\n      experiment1(canvas1.current, [\"#FF000080\", \"#00FF0080\", \"#0000FF80\"]);\n    }\n    if (canvas2.current) {\n      experiment1(canvas2.current, [\"#00FF0080\", \"#0000FF80\", \"#FF000080\"]);\n    }\n    if (canvas3.current) {\n      experiment1(canvas3.current, [\"#0000FF80\", \"#FF000080\", \"#00FF0080\"]);\n    }\n    if (canvas4.current) {\n      experiment2(canvas4.current, {\n        premultipliedAlpha,\n        blend,\n        depthTest,\n        colors: [\n          [1, 0, 0, 0.5],\n          [0, 1, 0, 0.5],\n          [0, 0, 1, 0.5],\n        ],\n      });\n    }\n    if (canvas5.current) {\n      experiment2(canvas5.current, {\n        premultipliedAlpha,\n        blend,\n        depthTest,\n        colors: [\n          [0, 1, 0, 0.5],\n          [0, 0, 1, 0.5],\n          [1, 0, 0, 0.5],\n        ],\n      });\n    }\n    if (canvas6.current) {\n      experiment2(canvas6.current, {\n        premultipliedAlpha,\n        blend,\n        depthTest,\n        colors: [\n          [0, 0, 1, 0.5],\n          [1, 0, 0, 0.5],\n          [0, 1, 0, 0.5],\n        ],\n      });\n    }\n    if (canvas8.current) {\n      experiment4(canvas8.current, {\n        premultipliedAlpha,\n        blend,\n        depthTest,\n        colors: [\n          [0, 0, 1, 0.8],\n          [1, 0, 0, 0.5],\n          [0, 1, 0, 0.5],\n          [1, 0, 0, 1],\n        ],\n      });\n    }\n    if (canvas7.current) {\n      experiment3(canvas7.current, [\"#0000FFff\", \"#FF000080\", \"#00FF0080\", \"#ff0000ff\"]);\n    }\n  }, [premultipliedAlpha, blend, depthTest]);\n\n  return (\n    <div>\n      <div>\n        <h2 className={styles.title}>Canvas 2D Blending (50% opacity)</h2>\n        <div className={styles.card}>\n          <canvas ref={canvas1} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas ref={canvas2} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas ref={canvas3} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas key={`canvas-7-${resetKey}`} ref={canvas7} className={styles.canvas} />\n        </div>\n      </div>\n      <div>\n        <h2 className={styles.title}>Canvas WebGL Blending</h2>\n        <div>\n          <label className={styles.option}>\n            <input\n              type=\"checkbox\"\n              onClick={handlePremultipliedAlphaClick}\n              defaultChecked={premultipliedAlpha}\n            />\n            Premultiplied Alpha\n          </label>\n          <label className={styles.option}>\n            <input type=\"checkbox\" onClick={handleBlendClick} defaultChecked={blend} />\n            Blend\n          </label>\n          <label className={styles.option}>\n            <input type=\"checkbox\" onClick={handleDepthTestClick} defaultChecked={depthTest} />\n            Depth Test\n          </label>\n        </div>\n        <div className={styles.card}>\n          <canvas key={`canvas-4-${resetKey}`} ref={canvas4} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas key={`canvas-5-${resetKey}`} ref={canvas5} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas key={`canvas-6-${resetKey}`} ref={canvas6} className={styles.canvas} />\n        </div>\n        <div className={styles.card}>\n          <canvas key={`canvas-8-${resetKey}`} ref={canvas8} className={styles.canvas} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlendingModesPage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"blending_page_style_title__m2eI9\",\"card\":\"blending_page_style_card__IdbxP\",\"canvas\":\"blending_page_style_canvas__XTfmI\",\"option\":\"blending_page_style_option__kcSyP\"};"],"names":["window","__NEXT_P","push","CANVAS_WIDTH","CANVAS_HEIGHT","experiment1","canvas","colors","ctx","getContext","width","height","save","fillStyle","fillRect","restore","experiment2","options","gl","program","translate","color","fragColor","getUniformLocation","uniform4f","translation","drawElements","TRIANGLES","indices","length","UNSIGNED_SHORT","console","log","premultipliedAlpha","vertices","blend","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","depthTest","DEPTH_TEST","vs","createShader","VERTEX_SHADER","shaderSource","vertexShader","compileShader","fs","FRAGMENT_SHADER","fragmentShader","createProgram","attachShader","linkProgram","useProgram","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","coords","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","clear","COLOR_BUFFER_BIT","viewport","init","canvas1","useRef","canvas2","canvas3","canvas4","canvas5","canvas6","canvas7","canvas8","useState","setPremultipliedAlpha","setBlend","setDepthTest","resetKey","handlePremultipliedAlphaClick","useCallback","handleBlendClick","handleDepthTestClick","useEffect","current","experiment4","experiment3","div","h2","className","styles","ref","label","input","type","onClick","defaultChecked","module","exports"],"sourceRoot":""}